"""
–ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—É—Å–∫ —Å–∏–Ω—Ç–µ–∑–∏—Ä–æ–≤–∞–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –±–µ–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
–ü—Ä–æ—Å—Ç–æ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: python synthesize/run.py
"""

import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append(str(Path(__file__).parent.parent))

from main import (
    load_prompts_config,
    recognize_lecture_notes,
    generate_additional_material,
    synthesize_material,
    save_results,
)
from recognition.utils import get_openai_client

# ================== –ù–ê–°–¢–†–û–ô–ö–ò ==================
# –ò–∑–º–µ–Ω–∏—Ç–µ —ç—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥ –≤–∞—à–∏ –Ω—É–∂–¥—ã

input_content = "–°–ª–µ–ø–∞—è –ø–æ–¥–ø–∏—Å—å –ß–∞—É–º–∞ –∏ –µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ –ø—Ä–æ—Ç–æ–∫–æ–ª–µ ¬´–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ¬ª –ü—Ä–æ—Ç–æ–∫–æ–ª ¬´–ò–≥—Ä–∞ –≤ –ø–æ–∫–µ—Ä –ø–æ –ø–µ—Ä–µ–ø–∏—Å–∫–µ¬ª( –ú–µ–Ω—Ç–∞–ª—å–Ω—ã–π –ø–æ–∫–µ—Ä)"

IMAGES_FOLDER = "images/clipped"  # –ü–∞–ø–∫–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –∫–æ–Ω—Å–ø–µ–∫—Ç–æ–≤

OUTPUT_DIR = "data/outputs/"  # –ü–∞–ø–∫–∞ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —ç—Ç–∞–ø–æ–≤ (True = –≤—ã–ø–æ–ª–Ω–∏—Ç—å, False = –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å)
DO_RECOGNITION = True  # –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å –∫–æ–Ω—Å–ø–µ–∫—Ç—ã –∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
DO_GENERATION = True  # –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª
DO_SYNTHESIS = True  # –°–∏–Ω—Ç–µ–∑–∏—Ä–æ–≤–∞—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª

# ===============================================


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    print("=" * 60)
    print("üöÄ –°–ò–ù–¢–ï–ó–ò–†–û–í–ê–ù–ò–ï –£–ß–ï–ë–ù–û–ì–û –ú–ê–¢–ï–†–ò–ê–õ–ê")
    print("=" * 60)
    print()

    print("üìù –≠–∫–∑–∞–º–µ–Ω–∞—Ü–∏–æ–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å:")
    print(f"   {input_content}")
    print()

    print(f"üìÅ –ü–∞–ø–∫–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏: {IMAGES_FOLDER}")
    print(f"üíæ –í—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª: {OUTPUT_DIR}")
    print()

    print("üîÑ –≠—Ç–∞–ø—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:")
    print(f"   üì∏ –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –∫–æ–Ω—Å–ø–µ–∫—Ç–æ–≤: {'‚úÖ –î–ê' if DO_RECOGNITION else '‚ùå –ù–ï–¢'}")
    print(f"   üìö –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞: {'‚úÖ –î–ê' if DO_GENERATION else '‚ùå –ù–ï–¢'}")
    print(f"   üîÑ –°–∏–Ω—Ç–µ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ: {'‚úÖ –î–ê' if DO_SYNTHESIS else '‚ùå –ù–ï–¢'}")
    print()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º .env —Ñ–∞–π–ª
    if not os.path.exists(".env"):
        print("‚ùå –û–®–ò–ë–ö–ê: –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("   –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –Ω–∞ –æ—Å–Ω–æ–≤–µ env.example –∏ –¥–æ–±–∞–≤—å—Ç–µ OPENAI_API_KEY")
        return

    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–æ–º–ø—Ç–æ–≤
        print("üìã –ó–∞–≥—Ä—É–∂–∞—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–æ–º–ø—Ç–æ–≤...")
        prompts_config = load_prompts_config()

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º OpenAI –∫–ª–∏–µ–Ω—Ç
        print("üîë –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é OpenAI –∫–ª–∏–µ–Ω—Ç...")
        client = get_openai_client()

        # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        lecture_notes = ""
        additional_material = ""
        synthesized_material = ""

        # –≠—Ç–∞–ø 1: –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –∫–æ–Ω—Å–ø–µ–∫—Ç–æ–≤
        if DO_RECOGNITION:
            print("\n" + "=" * 40)
            print("üì∏ –≠–¢–ê–ü 1: –†–ê–°–ü–û–ó–ù–ê–í–ê–ù–ò–ï –ö–û–ù–°–ü–ï–ö–¢–û–í")
            print("=" * 40)
            lecture_notes = recognize_lecture_notes(IMAGES_FOLDER, client)
            if not lecture_notes:
                print("‚ö†Ô∏è  –ö–æ–Ω—Å–ø–µ–∫—Ç—ã –Ω–µ –±—ã–ª–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω—ã, –ø—Ä–æ–¥–æ–ª–∂–∞—é –±–µ–∑ –Ω–∏—Ö...")
                lecture_notes = (
                    "–ö–æ–Ω—Å–ø–µ–∫—Ç—ã –Ω–µ –±—ã–ª–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω—ã –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"
                )
        else:
            print("\n‚è≠Ô∏è  –ü—Ä–æ–ø—É—Å–∫–∞—é —ç—Ç–∞–ø —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –∫–æ–Ω—Å–ø–µ–∫—Ç–æ–≤")
            lecture_notes = "–≠—Ç–∞–ø —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –ø—Ä–æ–ø—É—â–µ–Ω"

        # –≠—Ç–∞–ø 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞
        if DO_GENERATION:
            print("\n" + "=" * 40)
            print("üìö –≠–¢–ê–ü 2: –ì–ï–ù–ï–†–ê–¶–ò–Ø –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û–ì–û –ú–ê–¢–ï–†–ò–ê–õ–ê")
            print("=" * 40)
            additional_material = generate_additional_material(
                input_content, client, prompts_config
            )
        else:
            print("\n‚è≠Ô∏è  –ü—Ä–æ–ø—É—Å–∫–∞—é —ç—Ç–∞–ø –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞")
            additional_material = "–≠—Ç–∞–ø –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –ø—Ä–æ–ø—É—â–µ–Ω"

        # –≠—Ç–∞–ø 3: –°–∏–Ω—Ç–µ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞
        if DO_SYNTHESIS:
            print("\n" + "=" * 40)
            print("üîÑ –≠–¢–ê–ü 3: –°–ò–ù–¢–ï–ó–ò–†–û–í–ê–ù–ò–ï –ú–ê–¢–ï–†–ò–ê–õ–ê")
            print("=" * 40)
            synthesized_material = synthesize_material(
                input_content,
                lecture_notes,
                additional_material,
                client,
                prompts_config,
            )
        else:
            print("\n‚è≠Ô∏è  –ü—Ä–æ–ø—É—Å–∫–∞—é —ç—Ç–∞–ø —Å–∏–Ω—Ç–µ–∑–∏—Ä–æ–≤–∞–Ω–∏—è")
            synthesized_material = "–≠—Ç–∞–ø —Å–∏–Ω—Ç–µ–∑–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–ø—É—â–µ–Ω"

        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        print("\n" + "=" * 40)
        print("üíæ –°–û–•–†–ê–ù–ï–ù–ò–ï –†–ï–ó–£–õ–¨–¢–ê–¢–û–í")
        print("=" * 40)

        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        os.makedirs(os.path.dirname(OUTPUT_DIR), exist_ok=True)

        save_results(
            input_content,
            lecture_notes,
            additional_material,
            synthesized_material,
            OUTPUT_DIR,
        )

        print("\n" + "=" * 60)
        print("üéâ –ü–†–û–¶–ï–°–° –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù!")
        print("=" * 60)
        print(f"üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: {OUTPUT_DIR}")
        print()

    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê: {str(e)}")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É")
        return


if __name__ == "__main__":
    main()
