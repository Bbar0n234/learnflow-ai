"""Keyboard layouts for HITL settings management"""

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from ..services.api_client import HITLConfig


def build_hitl_settings_keyboard(config: HITLConfig) -> InlineKeyboardMarkup:
    """
    Build HITL settings keyboard with current state

    Layout:
    [üéØ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞: ‚úÖ/‚ùå]
    [üéØ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤: ‚úÖ/‚ùå]
    [‚ùå –í—ã–∫–ª—é—á–∏—Ç—å –≤—Å–µ —É–∑–ª—ã] [‚úÖ –í–∫–ª—é—á–∏—Ç—å –≤—Å–µ —É–∑–ª—ã]

    Args:
        config: Current HITL configuration

    Returns:
        InlineKeyboardMarkup: Keyboard for HITL settings
    """
    # Node toggle buttons - one per row for better readability
    keyboard = []

    # Edit material node
    edit_status = "‚úÖ" if config.edit_material else "‚ùå"
    keyboard.append(
        [
            InlineKeyboardButton(
                text=f"üéØ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞: {edit_status}",
                callback_data="hitl_toggle_edit_material",
            )
        ]
    )

    # Question generation node
    questions_status = "‚úÖ" if config.generating_questions else "‚ùå"
    keyboard.append(
        [
            InlineKeyboardButton(
                text=f"üéØ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤: {questions_status}",
                callback_data="hitl_toggle_generating_questions",
            )
        ]
    )

    # Preset buttons - two per row
    keyboard.append(
        [
            InlineKeyboardButton(
                text="‚ùå –í—ã–∫–ª—é—á–∏—Ç—å –≤—Å–µ —É–∑–ª—ã", callback_data="hitl_preset_autonomous"
            ),
            InlineKeyboardButton(
                text="‚úÖ –í–∫–ª—é—á–∏—Ç—å –≤—Å–µ —É–∑–ª—ã", callback_data="hitl_preset_guided"
            ),
        ]
    )

    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def format_hitl_status_message(config: HITLConfig) -> str:
    """
    Format HITL status message

    Args:
        config: Current HITL configuration

    Returns:
        str: Formatted status message
    """
    edit_status = "‚úÖ –í–∫–ª—é—á–µ–Ω–æ" if config.edit_material else "‚ùå –û—Ç–∫–ª—é—á–µ–Ω–æ"
    questions_status = "‚úÖ –í–∫–ª—é—á–µ–Ω–∞" if config.generating_questions else "‚ùå –û—Ç–∫–ª—é—á–µ–Ω–∞"

    # Determine mode
    if config.edit_material and config.generating_questions:
        mode = "üéõÔ∏è –£–ø—Ä–∞–≤–ª—è–µ–º—ã–π —Ä–µ–∂–∏–º"
    elif not config.edit_material and not config.generating_questions:
        mode = "üöÄ –ê–≤—Ç–æ–Ω–æ–º–Ω—ã–π —Ä–µ–∂–∏–º"
    else:
        mode = "‚öôÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ä–µ–∂–∏–º"

    message = (
        f"üìã **–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ HITL**\n\n"
        f"**–†–µ–∂–∏–º:** {mode}\n\n"
        f"‚Ä¢ **–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞:** {edit_status}\n"
        f"‚Ä¢ **–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤:** {questions_status}\n\n"
        f"_–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫_"
    )

    return message
