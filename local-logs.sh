#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${GREEN}üìÑ LearnFlow AI - Log Viewer${NC}"
echo -e "${GREEN}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –ª–æ–≥–∞–º–∏
if [ ! -d "logs" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Logs directory not found. Run ./local-dev.sh first${NC}"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è log —Ñ–∞–π–ª–æ–≤
if [ -z "$(ls -A logs/*.log 2>/dev/null)" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  No log files found. Services may not be running${NC}"
    exit 1
fi

echo -e "${BLUE}Available logs:${NC}"
echo -e "  ‚Ä¢ FastAPI:        logs/fastapi.log"
echo -e "  ‚Ä¢ Artifacts:      logs/artifacts.log"
echo -e "  ‚Ä¢ Prompt Config:  logs/prompt-config.log"
echo -e "  ‚Ä¢ Telegram Bot:   logs/bot.log"
echo -e ""
echo -e "${YELLOW}Showing all logs (Press Ctrl+C to exit)...${NC}"
echo -e "${GREEN}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
echo ""

# –ò—Å–ø–æ–ª—å–∑—É–µ–º tail —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º —Ñ–∞–π–ª–∞ –¥–ª—è —Ä–∞–∑–ª–∏—á–µ–Ω–∏—è –ª–æ–≥–æ–≤
tail -f logs/*.log 2>/dev/null | while IFS= read -r line; do
    # –î–æ–±–∞–≤–ª—è–µ–º —Ü–≤–µ—Ç–æ–≤—É—é –º–∞—Ä–∫–∏—Ä–æ–≤–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –ª–æ–≥–∞
    if [[ $line == *"ERROR"* ]]; then
        echo -e "${RED}$line${NC}"
    elif [[ $line == *"WARNING"* ]]; then
        echo -e "${YELLOW}$line${NC}"
    elif [[ $line == *"INFO"* ]]; then
        echo -e "${GREEN}$line${NC}"
    else
        echo "$line"
    fi
done